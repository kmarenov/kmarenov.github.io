---
layout: post
title:  "Vagrant для веб-разработчика"
date:   2016-01-01 18:43:15
categories: 
---

## Содержание
- [Введение](#intro)
- [Установка и настройка](#install)
- [Дополнительные материалы](#additional)

## <a name="intro"></a> Введение
Речь пойдет о замечательном инструменте, который называется `Vagrant`, и о том, чем он может быть полезен для веб-разработчика. 

Каждый разработчик сталкивается с необходимостью настройки окружения, необходимого для работы веб-приложения, над которым он работает. В состав окружения могут входить, например: PHP, MySQL, nginx и т. д.

Есть разные способы управления окружениями: кто-то вручную по-отдельности устанавливает и настраивает в системе каждый из необходимых компонентов, кто-то использует готовые наборы (например XAMPP, Open Server в Windows или lamp-server в Linux), но у этих подходов есть несколько недостатков, главный из которых заключается в трудности поддержки разных окружений для разных проектов. Нередко возникают ситуации, когда, например, разные проекты работают под разными версиями PHP, или им нужны разные настройки php.ini, или разные веб-серверы и т. д.

Я пользуюсь Vagrant для управления окружениями, и вот почему:

* Vagrant использует виртуализацию, а это в свою очередь дает следующие преимущества:

    * Для каждого проекта имеется индивидуальное окружение со своей версией PHP, своими настройками php.ini, веб-сервером и т. д. То есть полностью изолированная виртуальная машина.

    * Операционная система компьютера не "засоряется" различным программным обеспечением, которое, по большому счету, в ней не нужно.

* Vagrant на лету синхронизирует каталог проекта с каталогом внутри виртуальной машины. Не нужно заботиться об обновлении версий файлов внутри нее. Все происходит автоматически и мгновенно.

* Управление окружением производится минимальным набором простых команд. По сути, работа с Vagrant сводится к двум командам: `vagrant up` (запуск) и `vagrant halt` (остановка). 
  

Vagrant является оберткой над ПО виртуализации (VirtualBox, VMware и др.) и средствами управления конфигурациями (Chef, Salt, Puppet), и предоставляет способ легко и быстро всем этим управлять.

## <a name="install"></a> Установка и настройка

Рассмотрим по шагам процесс установки Vagrant, а также развернем для примера [готовый образ](https://box.scotch.io/) (или, как принято говорить в терминологии Vagrant - бокс) с преднастроенным [LAMP-стеком](https://ru.wikipedia.org/wiki/LAMP) и запустим в получившимся окружении веб-приложение (возьмем для примера [Yii 2 Basic Application Template](https://github.com/yiisoft/yii2-app-basic)).
 
 Я использую Linux Mint, поэтому весь процесс установки будет описан для этой ОС (в Ubuntu, на основе которой посторен Mint, все будет аналогично). Порядок установки в Windows должен быть таким же, но сам процесс будет отличаться. К сожалению, я не могу ничего сказать, насчет того, насколько стабильно все будет работать в Windows, однако все описанное ПО имеет версии для Windows, поэтому, надо полагать, там тоже все должно работать.
 
 Итак, поехали
 
### Установка VirtualBox
 Так как Vagrant оперирует виртуальными машинами, то ему для работы необходимо ПО виртуализации. Установим VirtualBox, как широко распространенный, удобный и простой в использовании пример такого ПО.
 {% highlight bash %}
 $ sudo apt-get install virtualbox
 {% endhighlight %}

### Установка Vagrant
 Затем установим сам Vagrant
 {% highlight bash %}
 $ sudo apt-get install vagrant
 {% endhighlight %}

### Установка плагинов Vagrant